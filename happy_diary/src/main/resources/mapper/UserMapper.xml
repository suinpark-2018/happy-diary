<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.happydiary.dao.UserDao">
    <!-- 현재 시간 -->
    <select id="now" resultType="String">
        SELECT NOW()
    </select>

    <!-- 회원 수 -->
    <select id="count" resultType="int">
        SELECT COUNT(*) FROM user
    </select>

    <!-- 회원 정보 저장 -->
    <insert id="insert" parameterType="UserDto">
        INSERT INTO user (
            id, pwd, name, email, phone_num, birth, gender, address, del_status, recent_login, reg_id, reg_date
        )
        VALUES (
            #{id}, #{pwd}, #{name}, #{email}, #{phone_num}, #{birth}, #{gender}, #{address}, 'N',  NOW(), #{id}, NOW()
               )
    </insert>

    <!-- 특정 회원 정보 조회 -->
    <!-- 아이디로 조회 (탈퇴하지 않은 회원만) -->
    <select id="select" parameterType="String" resultType="UserDto">
        SELECT * FROM user
        WHERE id = #{id} AND del_status = 'N'
    </select>

    <!-- 이메일로 조회 -->
    <select id="selectByEmail" parameterType="String" resultType="UserDto">
        SELECT * FROM user
        WHERE email = #{email}
    </select>

    <!-- 전체 회원 정보 조회 -->
    <select id="selectAll" resultType="UserDto">
        SELECT * FROM user
    </select>

    <!-- 특정 회원 정보 수정 -->
    <!-- 비밀번호의 경우 유출의 위험성이 있음에 따라 변경이력은 DB에 따로 저장하지 않음 -->
    <update id="update" parameterType="UserDto">
        UPDATE user
        SET pwd = #{pwd}, email = #{email}, phone_num = #{phone_num}, up_id = #{id}, up_date = NOW()
        WHERE id = #{id}
    </update>

    <!-- 회원탈퇴 -->
    <update id="updateDelStatus" parameterType="String">
        UPDATE user
        SET del_status = 'Y', del_date = NOW(), up_id = #{id}, up_date = NOW()
        WHERE id = #{id}
    </update>

    <!-- 특정 회원 정보 삭제 -->
    <delete id="delete" parameterType="String">
        DELETE FROM user
        WHERE id = #{id}
    </delete>

    <!-- 전체 회원 정보 삭제 -->
    <delete id="deleteAll">
        DELETE FROM user
    </delete>
</mapper>